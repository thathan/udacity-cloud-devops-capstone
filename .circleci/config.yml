version: 2.1
jobs:
  linter:
    docker:
      - image: python:3.8
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip && pip install -r requirements.txt
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            hadolint Dockerfile
            pylint --disable=R,C,W1203,W1202 app.py

  docker-build:
    docker: 
      - image: python:3.8.16-alpine3.18
    steps: 
      - checkout
      - setup_remote_docker 
      - run: 
          name: Install dependencies
          command: |
            apk add --no-cache curl
            apk add --no-cache py-pip
            pip install awscli
            set -x
            DOCKER_VER="20.10.24"
            curl -L -o /tmp/docker-$DOCKER_VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$DOCKER_VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Build docker image
          command: 
            docker build -t ${ECR_REPOSITORY_URL}:${CIRCLE_WORKFLOW_ID:0:7} .
      - run: 
          name: Push image to ECR repo
          command: |
            echo "Region is ${AWS_DEFAULT_REGION}"
            aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${ECR_REPOSITORY_URL}
            docker push ${ECR_REPOSITORY_URL}:${CIRCLE_WORKFLOW_ID:0:7}
workflows:
  default:
    jobs:
      - linter
      - docker-build: 
          requires: [linter]
